标准的互斥锁：
每次最多只有一个线程能持有锁，也是独占锁的概念。读/读，写/写，写/读操作都不能同时发生。
比如 内置锁：
java提供内置的锁机制为同步代码块(synchronized block), 同步代码块包括两个部分： 
1.作为锁的对象引用 2. 作为由这个锁保护的代码块。
synchronized(object){
}
每个java对象都可以用做一个实现同步的锁，这些锁即被成为内置锁或监视器锁。
注意：并不能认为同步代码块或关键字synchronized只能用于实现原子性或者确定临界区，其还可用于另外一个重要方面：内存可见性
